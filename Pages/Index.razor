@page "/"

<PageTitle>Index</PageTitle>
<h1>F1의 부/모 DNA 입력</h1>
<input placeholder="모" @bind="mDna"/>
<input placeholder="부" @bind="dDna"/>
<h2>각 염색체들의 표현형 입력</h2>
<div>
    @if (validate())
    {
        GeneExtension.Clear();
        int i = 0;
        foreach (var c in (dDna + mDna).ToList().Distinct())
        {
            <GeneCreateBox Dispnum="@i" GT="@(c.ToString())" />
            i++;
        }
        creature = new Wight(dad, mom);
    }

</div>
<div>
    <h1>F1</h1>
    @if (creature != null)
    {    
        <span>@creature.Genotype()</span><br/>
        <span>@creature.Phenotype</span>
    }
</div>
<div>
    <h1>F2</h1>
    @foreach (var f2 in Reproduct(null))
    {
            <span>@f2.Value</span><br/>
    }
</div>

@code {
    private string dDna = "", mDna = "";
    private DNA dad = new DNA(), mom = new DNA();
    private bool validate()
    {
        if (dDna.Length != mDna.Length || dDna.Length == 0 || mDna.Length == 0) return false;
        dad = new DNA();
        mom = new DNA();
        for (int i = 0; i < dDna.Length; i++)
        {
            dad.Genes.Add(new Gene(dDna[i]));
            mom.Genes.Add(new Gene(mDna[i]));
        }
        if (!DNAExtension.ValidateDNAs(dad, mom))
        {
            return false;
        }
        return true;
    }

    public Wight? creature;
    public Dictionary<(DNA, DNA), string> Reproduct(Wight? c)
    {
        if (creature == null) return new Dictionary<(DNA, DNA), string>();
        if (c == null) c = creature.Clone();
        return creature.ReproductWith(creature.Clone());
    }
    public Dictionary<string, int> CountSamePhenotypes(Dictionary<(DNA, DNA), string> reproducted)
    {
        Dictionary<string, int> phenoRatio = new Dictionary<string, int>();
        var f2 = reproducted;
        foreach (var item in f2)
        {
            var genotype = item.Value;

            if (!phenoRatio.TryAdd(item.Value.Phenotype(), 1))
                phenoRatio[item.Value.Phenotype()]++;
        }
        return phenoRatio;
    }

}